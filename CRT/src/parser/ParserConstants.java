package parser;

/* Generated By:JJTree&JavaCC: Do not edit this line. ParserConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int OPEN_COMMENT_BLOCK = 5;
  /** RegularExpression Id. */
  int IDENTIFIER = 6;
  /** RegularExpression Id. */
  int INTEGER = 7;
  /** RegularExpression Id. */
  int DIGIT = 8;
  /** RegularExpression Id. */
  int LETTER = 9;
  /** RegularExpression Id. */
  int SPECIALSYMB = 10;
  /** RegularExpression Id. */
  int DOMAINS = 11;
  /** RegularExpression Id. */
  int CONSTRAINTS = 12;
  /** RegularExpression Id. */
  int LB = 13;
  /** RegularExpression Id. */
  int RB = 14;
  /** RegularExpression Id. */
  int LP = 15;
  /** RegularExpression Id. */
  int RP = 16;
  /** RegularExpression Id. */
  int BOUNDS = 17;
  /** RegularExpression Id. */
  int COMMA = 18;
  /** RegularExpression Id. */
  int DOMAIN_DEF = 19;
  /** RegularExpression Id. */
  int PLUS = 20;
  /** RegularExpression Id. */
  int MINUS = 21;
  /** RegularExpression Id. */
  int TIMES = 22;
  /** RegularExpression Id. */
  int DIV = 23;
  /** RegularExpression Id. */
  int NEQ = 24;
  /** RegularExpression Id. */
  int EQ = 25;
  /** RegularExpression Id. */
  int LEQ = 26;
  /** RegularExpression Id. */
  int GEQ = 27;
  /** RegularExpression Id. */
  int G = 28;
  /** RegularExpression Id. */
  int L = 29;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 33;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT_BLOCK = 1;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"/*\"",
    "<IDENTIFIER>",
    "<INTEGER>",
    "<DIGIT>",
    "<LETTER>",
    "<SPECIALSYMB>",
    "\"DOMAINS:\"",
    "\"CONSTRAINTS:\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "<BOUNDS>",
    "\",\"",
    "\":\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "<NEQ>",
    "\"=\"",
    "\"=<\"",
    "\">=\"",
    "\">\"",
    "\"<\"",
    "\"*/\"",
    "<token of kind 31>",
    "\"//\"",
    "<SINGLE_LINE_COMMENT>",
    "<token of kind 34>",
  };

}
